name: android-build
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.24.0"
          channel: "stable"

      - name: Ensure android skeleton
        shell: bash
        run: |
          set -e
          if [ ! -d android ]; then
            flutter create . --platforms=android --project-name=popperscuv5
          fi

      - name: Set Gradle wrapper 8.2.1
        shell: bash
        run: |
          set -e
          mkdir -p android/gradle/wrapper
          printf 'distributionUrl=https\\://services.gradle.org/distributions/gradle-8.2.1-all.zip\n' > android/gradle/wrapper/gradle-wrapper.properties

      - name: Write settings.gradle (AGP/Kotlin)
        shell: bash
        run: |
          set -e
          FILE="android/settings.gradle"
          : > "$FILE"
          printf 'pluginManagement {\n' >> "$FILE"
          printf '    repositories {\n' >> "$FILE"
          printf '        google()\n' >> "$FILE"
          printf '        mavenCentral()\n' >> "$FILE"
          printf '        gradlePluginPortal()\n' >> "$FILE"
          printf '    }\n' >> "$FILE"
          printf '    plugins {\n' >> "$FILE"
          printf '        id "com.android.application" version "8.1.2"\n' >> "$FILE"
          printf '        id "com.android.library"     version "8.1.2"\n' >> "$FILE"
          printf '        id "org.jetbrains.kotlin.android" version "1.9.24"\n' >> "$FILE"
          printf '    }\n' >> "$FILE"
          printf '}\n' >> "$FILE"
          printf 'plugins {\n' >> "$FILE"
          printf '    id "com.android.application" apply false\n' >> "$FILE"
          printf '    id "org.jetbrains.kotlin.android" apply false\n' >> "$FILE"
          printf '}\n' >> "$FILE"
          printf 'include(":app")\n' >> "$FILE"

      - name: Force SDK 35 and AndroidX
        shell: bash
        run: |
          set -e
          APP="android/app/build.gradle"
          if [ -f "$APP" ]; then
            sed -i 's/compileSdk.*/compileSdk 35/' "$APP" || true
            if grep -q 'targetSdk' "$APP"; then
              sed -i 's/targetSdk.*/targetSdk 35/' "$APP" || true
            else
              awk '1;/defaultConfig *\{/{print "        targetSdk 35"}' "$APP" > "$APP.tmp" && mv "$APP.tmp" "$APP"
            fi
          fi
          printf 'android.useAndroidX=true\n' >> android/gradle.properties
          printf 'android.enableJetifier=true\n' >> android/gradle.properties

      - run: flutter pub get
      - run: flutter build apk --release
      - run: flutter build appbundle --release

      - uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: build/app/outputs/flutter-apk/app-release.apk

      - uses: actions/upload-artifact@v4
        with:
          name: app-release-aab
          path: build/app/outputs/bundle/release/app-release.aab        run: flutter build appbundle --release

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: build/app/outputs/flutter-apk/app-release.apk

      - name: Upload AAB
        uses: actions/upload-artifact@v4
        with:
          name: app-release-aab
          path: build/app/outputs/bundle/release/app-release.aab
      - uses: actions/upload-artifact@v4
        with:
          name: app-release-aab
          path: build/app/outputs/bundle/release/app-release.aab
