name: android-build

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.24.0"
          channel: "stable"

      - name: Cache Pub
        uses: actions/cache@v4
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-pub-

      # Crea android/ si NO existe (forzamos nombre válido del proyecto)
      - name: Ensure Android skeleton
        run: |
          set -euxo pipefail
          if [ ! -d "android" ]; then
            flutter create . --platforms=android --project-name=popperscuv5
          fi

      # Parchea Android SDK/Kotlin/AGP y gradle.properties
      - name: Patch Android config (SDK 35 + Kotlin/AGP)
        run: |
          set -euxo pipefail

          APP_GRADLE="android/app/build.gradle"
          SETTINGS_GRADLE="android/settings.gradle"
          ROOT_GRADLE="android/build.gradle"
          PROPS="android/gradle.properties"

          # 1) compileSdk / targetSdk = 35 (app/build.gradle)
          if [ -f "$APP_GRADLE" ]; then
            sed -i 's/compileSdk *[0-9][0-9]*/compileSdk 35/' "$APP_GRADLE" || true
            if grep -q "targetSdk" "$APP_GRADLE"; then
              sed -i 's/targetSdk *[0-9][0-9]*/targetSdk 35/' "$APP_GRADLE" || true
            else
              awk '1;/defaultConfig *\{/{print "        targetSdk 35"}' "$APP_GRADLE" > "$APP_GRADLE.tmp" && mv "$APP_GRADLE.tmp" "$APP_GRADLE"
            fi
          fi

          # 2) settings.gradle (plantilla moderna con plugins{}): Kotlin 1.9.24 y AGP 8.1.2
          if [ -f "$SETTINGS_GRADLE" ]; then
            sed -i 's/id *"org.jetbrains.kotlin.android" *version *"[^"]*"/id "org.jetbrains.kotlin.android" version "1.9.24"/' "$SETTINGS_GRADLE" || true
            sed -i 's/id *"com.android.application" *version *"[^"]*"/id "com.android.application" version "8.1.2"/' "$SETTINGS_GRADLE" || true
            sed -i 's/id *"com.android.library" *version *"[^"]*"/id "com.android.library" version "8.1.2"/' "$SETTINGS_GRADLE" || true
          fi

          # 3) build.gradle (plantilla vieja con buildscript{}), por si aplica
          if [ -f "$ROOT_GRADLE" ]; then
            sed -i "s/ext.kotlin_version *= *'[^']*'/ext.kotlin_version = '1.9.24'/" "$ROOT_GRADLE" || true
            sed -i 's/com.android.tools.build:gradle:[0-9.]\+/com.android.tools.build:gradle:8.1.2/' "$ROOT_GRADLE" || true
          fi

          # 4) gradle.properties → AndroidX/Jetifier
          [ -f "$PROPS" ] || touch "$PROPS"
          grep -q '^android.useAndroidX=true' "$PROPS" || echo 'android.useAndroidX=true' >> "$PROPS"
          grep -q '^android.enableJetifier=true' "$PROPS" || echo 'android.enableJetifier=true' >> "$PROPS"

      # Arregla el import para ConflictAlgorithm si falta
      - name: Patch Dart import for ConflictAlgorithm
        run: |
          set -euxo pipefail
          FILE="lib/utils/xml_backup.dart"
          if [ -f "$FILE" ] && grep -q "ConflictAlgorithm" "$FILE"; then
            if ! grep -q "sqflite.dart' show ConflictAlgorithm" "$FILE"; then
              # Inserta el import justo después de los otros imports
              awk '1;/package:xml\/xml.dart/{print "import '\''package:sqflite/sqflite.dart'\'' show ConflictAlgorithm;"}' "$FILE" > "$FILE.tmp" && mv "$FILE.tmp" "$FILE"
            fi
          fi

      - name: Flutter pub get
        run: flutter pub get

      - name: Accept Android licenses (best-effort)
        run: yes "y" | flutter doctor --android-licenses || true

      - name: Build APK (release)
        run: flutter build apk --release

      - name: Build AAB (release)
        run: flutter build appbundle --release

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: build/app/outputs/flutter-apk/app-release.apk

      - name: Upload AAB
        uses: actions/upload-artifact@v4
        with:
          name: app-release-aab
          path: build/app/outputs/bundle/release/app-release.aab
      - name: Accept Android licenses (best-effort)
        run: yes "y" | flutter doctor --android-licenses || true

      - name: Build APK (release)
        run: flutter build apk --release

      - name: Build AAB (release)
        run: flutter build appbundle --release

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: build/app/outputs/flutter-apk/app-release.apk

      - name: Upload AAB
        uses: actions/upload-artifact@v4
        with:
          name: app-release-aab
          path: build/app/outputs/bundle/release/app-release.aab
